name: iOS Nuclear Build v2

on:
  push:
    branches: [ main ]

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Dependencies
        run: npm install
        
      - name: Install CocoaPods
        run: gem install cocoapods
        
      - name: Pod Install
        run: |
          cd ios
          pod install
        
      - name: Build Archive
        run: |
          cd ios
          xcodebuild archive \
            -workspace EduConnect.xcworkspace \
            -scheme EduConnect \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath ./EduConnect.xcarchive \
            CODE_SIGNING_ALLOWED=YES \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY="" \
            PROVISIONING_PROFILE_SPECIFIER=""
      
      - name: Create Export Options Plist
        run: |
          cd ios
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>stripSwiftSymbols</key>
              <false/>
              <key>compileBitcode</key>
              <false/>
          </dict>
          </plist>
          EOF
      
      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath ./EduConnect.xcarchive \
            -exportPath ./export \
            -exportOptionsPlist ./ExportOptions.plist \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO || echo "Export failed, checking if we have .app bundle instead"
      
      - name: Create IPA from App Bundle (fallback)
        run: |
          cd ios
          if [ ! -f "./export/EduConnect.ipa" ]; then
            echo "IPA export failed, looking for .app bundle to create IPA manually"
            APP_PATH=$(find . -name "EduConnect.app" -type d | head -1)
            if [ -n "$APP_PATH" ]; then
              echo "Found app bundle at: $APP_PATH"
              mkdir -p ./export/Payload
              cp -R "$APP_PATH" ./export/Payload/
              cd ./export
              zip -r EduConnect.ipa Payload/
              echo "Created IPA manually from app bundle"
              ls -la *.ipa
            else
              echo "No app bundle found either"
            fi
          else
            echo "IPA export succeeded"
            ls -la ./export/*.ipa
          fi
    
      - name: Extract Build Errors (on failure)
        if: failure()
        run: |
          echo "=== EXTRACTING ERROR SUMMARY ==="
          # Get the last few lines of output which usually contain the error summary
          echo "=== LAST 300 LINES OF OUTPUT ==="
          tail -300 /var/log/system.log 2>/dev/null || echo "System log not accessible"
          
          # Look for common error patterns in the workspace
          echo "=== CHECKING FOR BUILD ERRORS IN WORKSPACE ==="
          cd ios
          find . -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \; 2>/dev/null || echo "No log files found"
          
          # Check derived data if accessible
          echo "=== CHECKING DERIVED DATA ==="
          ls -la ~/Library/Developer/Xcode/DerivedData/ 2>/dev/null || echo "DerivedData not accessible"
          
          echo "=== BUILD FAILURE DETECTED - Check the Build Archive step output above for specific errors ==="
    
      - name: List Build Outputs
        run: |
          cd ios
          echo "=== BUILD OUTPUT DIRECTORY STRUCTURE ==="
          find . -name "*.app" -o -name "*.xcarchive" -o -name "*.ipa" | head -20
          echo "=== DERIVED DATA PRODUCTS ==="
          find ~/Library/Developer/Xcode/DerivedData -name "*.app" 2>/dev/null | head -10 || echo "DerivedData not accessible"
          echo "=== WORKSPACE BUILD DIRECTORY ==="
          ls -la build/ 2>/dev/null || echo "No build directory"
          
      - name: Upload iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa-file
          path: |
            ios/export/*.ipa
            ios/EduConnect.xcarchive
        if-no-files-found: warn

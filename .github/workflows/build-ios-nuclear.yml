name: iOS Nuclear Build

on:
  push:
    branches: [ main ]

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Dependencies
        run: npm install
        
      - name: Install CocoaPods
        run: gem install cocoapods
        
      - name: Pod Install
        run: |
          cd ios
          pod install
        
      - name: Build Archive
        run: |
          cd ios
          xcodebuild archive \
            -workspace EduConnect.xcworkspace \
            -scheme EduConnect \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath ./EduConnect.xcarchive \
            CODE_SIGNING_ALLOWED=NO || echo "XCODEBUILD_FAILED"
    
      - name: Extract Build Errors (on failure)
        if: failure()
        run: |
          echo "=== EXTRACTING ERROR SUMMARY ==="
          # Get the last few lines of output which usually contain the error summary
          echo "=== LAST 300 LINES OF OUTPUT ==="
          tail -300 /var/log/system.log 2>/dev/null || echo "System log not accessible"
          
          # Look for common error patterns in the workspace
          echo "=== CHECKING FOR BUILD ERRORS IN WORKSPACE ==="
          cd ios
          find . -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \; 2>/dev/null || echo "No log files found"
          
          # Check derived data if accessible
          echo "=== CHECKING DERIVED DATA ==="
          ls -la ~/Library/Developer/Xcode/DerivedData/ 2>/dev/null || echo "DerivedData not accessible"
          
          echo "=== BUILD FAILURE DETECTED - Check the Build Archive step output above for specific errors ==="
    
      - name: Upload Archive
        uses: actions/upload-artifact@v4
        with:
          name: ios-nuclear-build
          path: ios/EduConnect.xcarchive
name: Build iOS App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ios:
    runs-on: macos-14  # Latest macOS with Xcode 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Environment Diagnostics
      run: |
        echo "=== System Information ==="
        sw_vers
        xcodebuild -version
        node --version
        npm --version
        ruby --version
        gem --version
        echo "=== Available Xcode SDKs ==="
        xcodebuild -showsdks
        echo "=== Directory Structure ==="
        ls -la
        echo "=== iOS Directory ==="
        ls -la ios/
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Node dependencies
      run: |
        echo "=== Installing Node Dependencies ==="
        npm install 2>&1 | tee npm-install.log
        echo "=== Verifying React Native ==="
        npm list react-native
        echo "=== Node Modules Check ==="
        ls -la node_modules/react-native/ | head -20
    
    - name: Ruby Environment Setup
      run: |
        echo "=== Ruby Environment ==="
        ruby --version
        gem --version
        gem env
        echo "=== Installing Bundler ==="
        gem install bundler
        
    - name: CocoaPods Installation
      run: |
        echo "=== Installing CocoaPods ==="
        gem install cocoapods 2>&1 | tee cocoapods-install.log
        pod --version
        echo "=== CocoaPods Environment ==="
        pod env
        
    - name: iOS Dependencies Preparation
      run: |
        cd ios
        echo "=== Current iOS Directory ==="
        ls -la
        echo "=== Cleaning Previous Pods ==="
        rm -rf Pods Podfile.lock
        echo "=== Podfile Content ==="
        cat Podfile
        
    - name: Pod Install with Full Logging
      run: |
        cd ios
        echo "=== Updating Pod Repo ==="
        pod repo update 2>&1 | tee ../pod-repo-update.log
        echo "=== Running Pod Install ==="
        set -e  # Exit on any error
        pod install --verbose 2>&1 | tee ../pod-install.log
        if [ $? -ne 0 ]; then
          echo "❌ pod install failed"
          echo "=== Pod Install Log ==="
          cat ../pod-install.log
          exit 1
        fi
        echo "=== Post Pod Install Directory ==="
        ls -la
        
    - name: Xcode Workspace Verification
      run: |
        cd ios
        echo "=== Verifying Workspace Creation ==="
        if [ -f "EduConnect.xcworkspace/contents.xcworkspacedata" ]; then
          echo "✅ Workspace created successfully"
          cat EduConnect.xcworkspace/contents.xcworkspacedata
        else
          echo "❌ Workspace not created"
          exit 1
        fi
        echo "=== Pods Directory Contents ==="
        ls -la Pods/ | head -20
        
    - name: Build iOS App (Archive)
      run: |
        cd ios
        echo "=== Starting Xcode Build ==="
        xcodebuild clean \
                  -workspace EduConnect.xcworkspace \
                  -scheme EduConnect \
                  -configuration Release 2>&1 | tee ../xcode-clean.log
                  
        echo "=== Building Archive ==="
        xcodebuild archive \
                  -workspace EduConnect.xcworkspace \
                  -scheme EduConnect \
                  -configuration Release \
                  -destination generic/platform=iOS \
                  -archivePath ./build/EduConnect.xcarchive \
                  CODE_SIGNING_ALLOWED=NO \
                  CODE_SIGNING_REQUIRED=NO \
                  CODE_SIGN_IDENTITY="" \
                  PROVISIONING_PROFILE="" \
                  DEVELOPMENT_TEAM="" \
                  2>&1 | tee ../xcode-build.log
    
    - name: Verify Build Output
      run: |
        cd ios
        echo "=== Build Verification ==="
        if [ -d "./build/EduConnect.xcarchive" ]; then
          echo "✅ iOS Archive created successfully!"
          ls -la ./build/EduConnect.xcarchive/
          find ./build/EduConnect.xcarchive -name "*.app" -exec ls -la {} \;
        else
          echo "❌ iOS Archive not found. Build failed."
          echo "=== Available files ==="
          find . -name "*.log" -exec echo "=== {} ===" \; -exec cat {} \;
          exit 1
        fi
      
    - name: Upload iOS Archive
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: ios-archive
        path: ios/build/EduConnect.xcarchive
        retention-days: 7
        
    - name: Upload All Logs (Success or Failure)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build-logs
        path: |
          npm-install.log
          cocoapods-install.log
          pod-repo-update.log
          pod-install.log
          xcode-clean.log
          xcode-build.log
        retention-days: 7